const P=JSON.parse('{"key":"v-d8d7846c","path":"/interview/PHP/PHP5%20%E8%B7%9F%20PHP7%20%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"PHP5.6 与 PHP 7.0 区别","lang":"zh-CN","frontmatter":{"description":"PHP5.6 与 PHP 7.0 区别 两者的区别 PHP7.0 比PHP5.6性能提升了两倍。 PHP7.0 全面一致支持64位。 PHP7.0 之前出现的致命错误，都改成了抛出异常。 增加了 null合并运算符（ ?? ）。效果相当于三元运算符。 PHP7.0 新增了函数的返回类型声明。 PHP7.0 新增了标量类型声明。 　　PHP7 中的函数的形参类型声明可以是标量。在 PHP 5 中只可以是类名、接口、array 或者 callable (PHP 5.4，即可以是函数，包括匿名函数)，现在也可以使用 string、int、float和 bool 了。 新增加了匿名类。 　　PHP 5.3 开始有了匿名函数，现在又新增了匿名类； PHP7.0之后溢移除了一些老的不再支持的SAPI(服务器端应用编程端口)和扩展。 define 可以定义常量数组。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/PHP/PHP5%20%E8%B7%9F%20PHP7%20%E7%9A%84%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"PHP5.6 与 PHP 7.0 区别"}],["meta",{"property":"og:description","content":"PHP5.6 与 PHP 7.0 区别 两者的区别 PHP7.0 比PHP5.6性能提升了两倍。 PHP7.0 全面一致支持64位。 PHP7.0 之前出现的致命错误，都改成了抛出异常。 增加了 null合并运算符（ ?? ）。效果相当于三元运算符。 PHP7.0 新增了函数的返回类型声明。 PHP7.0 新增了标量类型声明。 　　PHP7 中的函数的形参类型声明可以是标量。在 PHP 5 中只可以是类名、接口、array 或者 callable (PHP 5.4，即可以是函数，包括匿名函数)，现在也可以使用 string、int、float和 bool 了。 新增加了匿名类。 　　PHP 5.3 开始有了匿名函数，现在又新增了匿名类； PHP7.0之后溢移除了一些老的不再支持的SAPI(服务器端应用编程端口)和扩展。 define 可以定义常量数组。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PHP5.6 与 PHP 7.0 区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"两者的区别","slug":"两者的区别","link":"#两者的区别","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.73,"words":219},"filePathRelative":"interview/PHP/PHP5 跟 PHP7 的区别.md","excerpt":"<h1> PHP5.6 与 PHP 7.0 区别</h1>\\n<h2> 两者的区别</h2>\\n<ul>\\n<li>\\n<p>PHP7.0 比PHP5.6性能提升了两倍。</p>\\n</li>\\n<li>\\n<p>PHP7.0 全面一致支持64位。</p>\\n</li>\\n<li>\\n<p>PHP7.0 之前出现的致命错误，都改成了抛出异常。</p>\\n</li>\\n<li>\\n<p>增加了 <code>null合并运算符</code>（ ?? ）。效果相当于三元运算符。</p>\\n</li>\\n<li>\\n<p>PHP7.0 新增了函数的返回类型声明。</p>\\n</li>\\n<li>\\n<p>PHP7.0 新增了标量类型声明。\\n　　PHP7 中的函数的形参类型声明可以是标量。在 PHP 5 中只可以是类名、接口、array 或者 callable (PHP 5.4，即可以是函数，包括匿名函数)，现在也可以使用 string、int、float和 bool 了。</p>\\n</li>\\n<li>\\n<p>新增加了<code>匿名类</code>。\\n　　PHP 5.3 开始有了匿名函数，现在又新增了匿名类；</p>\\n</li>\\n<li>\\n<p>PHP7.0之后溢移除了一些老的不再支持的SAPI(服务器端应用编程端口)和扩展。</p>\\n</li>\\n<li>\\n<p>define 可以定义常量数组。</p>\\n</li>\\n</ul>","autoDesc":true}');export{P as data};
