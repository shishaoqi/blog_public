const e=JSON.parse('{"key":"v-6836c5dc","path":"/interview/MySQL/MySQL%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"MySQL 连接的使用","lang":"zh-CN","frontmatter":{"description":"MySQL 连接的使用 在前几章节中，我们已经学会了如何在一张表中读取数据，这是相对简单的，但是在真正的应用中经常需要从多个数据表中读取数据。 本章节我们将向大家介绍如何使用 MySQL 的 JOIN 在两个或多个表中查询数据。 你可以在 SELECT, UPDATE 和 DELETE 语句中使用 Mysql 的 JOIN 来联合多表查询。 JOIN 按照功能大致分为如下三类： INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。 LEFT JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。 RIGHT JOIN（右连接）： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。 本章节使用的数据库结构及数据下载：runoob-mysql-join-test.sql。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/MySQL/MySQL%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"MySQL 连接的使用"}],["meta",{"property":"og:description","content":"MySQL 连接的使用 在前几章节中，我们已经学会了如何在一张表中读取数据，这是相对简单的，但是在真正的应用中经常需要从多个数据表中读取数据。 本章节我们将向大家介绍如何使用 MySQL 的 JOIN 在两个或多个表中查询数据。 你可以在 SELECT, UPDATE 和 DELETE 语句中使用 Mysql 的 JOIN 来联合多表查询。 JOIN 按照功能大致分为如下三类： INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。 LEFT JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。 RIGHT JOIN（右连接）： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。 本章节使用的数据库结构及数据下载：runoob-mysql-join-test.sql。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/article/docs/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"MySQL 连接的使用"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL 连接的使用\\",\\"image\\":[\\"https://mister-hope.github.io/article/docs/\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"在命令提示符中使用 INNER JOIN","slug":"在命令提示符中使用-inner-join","link":"#在命令提示符中使用-inner-join","children":[{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]},{"level":2,"title":"MySQL LEFT JOIN","slug":"mysql-left-join","link":"#mysql-left-join","children":[{"level":3,"title":"实例","slug":"实例-1","link":"#实例-1","children":[]}]},{"level":2,"title":"MySQL RIGHT JOIN","slug":"mysql-right-join","link":"#mysql-right-join","children":[{"level":3,"title":"实例","slug":"实例-2","link":"#实例-2","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.97,"words":892},"filePathRelative":"interview/MySQL/MySQL连接的使用.md","excerpt":"<h1> MySQL 连接的使用</h1>\\n<p>在前几章节中，我们已经学会了如何在一张表中读取数据，这是相对简单的，但是在真正的应用中经常需要从多个数据表中读取数据。</p>\\n<p>本章节我们将向大家介绍如何使用 MySQL 的 JOIN 在两个或多个表中查询数据。</p>\\n<p>你可以在 SELECT, UPDATE 和 DELETE 语句中使用 Mysql 的 JOIN 来联合多表查询。</p>\\n<p>JOIN 按照功能大致分为如下三类：</p>\\n<ul>\\n<li>INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。</li>\\n<li>LEFT JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。</li>\\n<li>RIGHT JOIN（右连接）： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。\\n本章节使用的数据库结构及数据下载：<a href=\\"http://static.runoob.com/download/runoob-mysql-join-test.sql\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">runoob-mysql-join-test.sql</a>。</li>\\n</ul>","autoDesc":true}');export{e as data};
