const e=JSON.parse('{"key":"v-cb7e3890","path":"/interview/Redis/redis%20%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98.html","title":"缓存和数据库一致性问题","lang":"zh-CN","frontmatter":{"description":"缓存和数据库一致性问题 如何保证缓存和数据库一致性，这是一个老生常谈的话题了。 但很多人对这个问题，依旧有很多疑惑： 到底是更新缓存还是删缓存？ 到底选择先更新数据库，再删除缓存，还是先删除缓存，再更新数据库？ 为什么要引入消息队列保证一致性？ 延迟双删会有什么问题？到底要不要用？ ... https://zhuanlan.zhihu.com/p/338833847","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/Redis/redis%20%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"缓存和数据库一致性问题"}],["meta",{"property":"og:description","content":"缓存和数据库一致性问题 如何保证缓存和数据库一致性，这是一个老生常谈的话题了。 但很多人对这个问题，依旧有很多疑惑： 到底是更新缓存还是删缓存？ 到底选择先更新数据库，再删除缓存，还是先删除缓存，再更新数据库？ 为什么要引入消息队列保证一致性？ 延迟双删会有什么问题？到底要不要用？ ... https://zhuanlan.zhihu.com/p/338833847"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"缓存和数据库一致性问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.11,"words":334},"filePathRelative":"interview/Redis/redis 和数据库一致性问题.md","excerpt":"<h1> 缓存和数据库一致性问题</h1>\\n<p>如何保证缓存和数据库一致性，这是一个老生常谈的话题了。</p>\\n<p>但很多人对这个问题，依旧有很多疑惑：</p>\\n<ul>\\n<li>到底是更新缓存还是删缓存？</li>\\n<li>到底选择先更新数据库，再删除缓存，还是先删除缓存，再更新数据库？</li>\\n<li>为什么要引入消息队列保证一致性？</li>\\n<li>延迟双删会有什么问题？到底要不要用？</li>\\n<li>...</li>\\n</ul>\\n<p><a href=\\"https://zhuanlan.zhihu.com/p/338833847\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://zhuanlan.zhihu.com/p/338833847</a></p>","autoDesc":true}');export{e as data};
