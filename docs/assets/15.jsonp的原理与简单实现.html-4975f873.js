const t=JSON.parse('{"key":"v-7050f1fc","path":"/interview/%E5%89%8D%E7%AB%AF/15.jsonp%E7%9A%84%E5%8E%9F%E7%90%86%E4%B8%8E%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0.html","title":"jsonp的原理与简单实现","lang":"zh-CN","frontmatter":{"description":"jsonp的原理与简单实现 原理 由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源，为了实现跨域请求，可以通过script标签实现跨域请求，然后在服务端输出JSON数据并执行回调函数，从而解决了跨域的数据请求。 其本质是利用了&lt; script src=”” &gt;&lt;/ script &gt;标签具有可跨域的特性，由服务端返回一个预先定义好的Javascript函数的调用，并且将服务器数据以该函数参数的形式传递过来，此方法需要前后端配合完成。 它只能以GET方式请求 一般将传递的 key 命名为 callback","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/%E5%89%8D%E7%AB%AF/15.jsonp%E7%9A%84%E5%8E%9F%E7%90%86%E4%B8%8E%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"jsonp的原理与简单实现"}],["meta",{"property":"og:description","content":"jsonp的原理与简单实现 原理 由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源，为了实现跨域请求，可以通过script标签实现跨域请求，然后在服务端输出JSON数据并执行回调函数，从而解决了跨域的数据请求。 其本质是利用了&lt; script src=”” &gt;&lt;/ script &gt;标签具有可跨域的特性，由服务端返回一个预先定义好的Javascript函数的调用，并且将服务器数据以该函数参数的形式传递过来，此方法需要前后端配合完成。 它只能以GET方式请求 一般将传递的 key 命名为 callback"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jsonp的原理与简单实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"php服务器示例","slug":"php服务器示例","link":"#php服务器示例","children":[]},{"level":2,"title":"客户端示例","slug":"客户端示例","link":"#客户端示例","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.47,"words":442},"filePathRelative":"interview/前端/15.jsonp的原理与简单实现.md","excerpt":"<h1> jsonp的原理与简单实现</h1>\\n<h2> 原理</h2>\\n<p>由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源，为了实现跨域请求，可以通过script标签实现跨域请求，然后在服务端输出JSON数据并执行回调函数，从而解决了跨域的数据请求。</p>\\n<p>其本质是利用了&lt; script src=”” &gt;&lt;/ script &gt;标签具有可跨域的特性，由服务端返回一个预先定义好的Javascript函数的调用，并且将服务器数据以该函数参数的形式传递过来，此方法需要前后端配合完成。\\n它只能以GET方式请求\\n一般将传递的 key 命名为 callback</p>","autoDesc":true}');export{t as data};
