import{_ as r,W as l,X as d,Y as e,Z as a,$ as t,a2 as n,C as _}from"./framework-7d1f27fd.js";const s={},c=n('<h1 id="深入解析-composer-的自动加载原理" tabindex="-1"><a class="header-anchor" href="#深入解析-composer-的自动加载原理" aria-hidden="true">#</a> 深入解析 composer 的自动加载原理</h1><h3 id="原始期" tabindex="-1"><a class="header-anchor" href="#原始期" aria-hidden="true">#</a> 原始期</h3><p>在 PHP 开发过程中，如果希望从外部引入一个 Class ，通常会使用 include 和 require 方法，去把定义这个 Class 的文件包含进来。</p><h3 id="进化" tabindex="-1"><a class="header-anchor" href="#进化" aria-hidden="true">#</a> 进化</h3><p>从 PHP5 开始，当我们在使用一个类时，如果发现这个类没有加载，就会自动运行 __autoload() 函数，这个函数是我们在程序中自定义的，在这个函数中我们可以加载需要使用的类。</p><h4 id="autoload-函数存在的问题" tabindex="-1"><a class="header-anchor" href="#autoload-函数存在的问题" aria-hidden="true">#</a> __autoload() 函数存在的问题</h4><ul><li><p>如果在一个系统的实现中，如果需要使用很多其它的类库，这些类库可能是由不同的开发人员编写的， 其类名与实际的磁盘文件的映射规则不尽相同。这时如果要实现类库文件的自动加载，就必须在 __autoload() 函数中将所有的映射规则全部实现，这样的话 __autoload() 函数有可能会非常复杂，甚至无法实现。最后可能会导致 __autoload() 函数十分臃肿，这时即便能够实现，也会给将来的维护和系统效率带来很大的负面影响。</p></li><li><p>那么问题出现在哪里呢？问题出现在 __autoload() 是全局函数只能定义一次 ，不够灵活，所以所有的类名与文件名对应的逻辑规则都要在一个函数里面实现，造成这个函数的臃肿。那么如何来解决这个问题呢？答案就是使用一个 <code>__autoload 调用堆栈</code> ，不同的映射关系写到不同的 __autoload 函数中去，然后统一注册统一管理，这个就是 PHP5 引入的 SPL Autoload 。</p></li></ul><h3 id="现代" tabindex="-1"><a class="header-anchor" href="#现代" aria-hidden="true">#</a> 现代</h3>',8),h={href:"https://www.php.net/manual/zh/function.spl-autoload-register.php",target:"_blank",rel:"noopener noreferrer"},i=e("code",null,"spl_autoload_register() 就是我们上面所说的 __autoload 调用堆栈",-1),u={href:"https://segmentfault.com/a/1190000014948542",target:"_blank",rel:"noopener noreferrer"};function p(f,m){const o=_("ExternalLinkIcon");return l(),d("div",null,[c,e("p",null,[a("SPL是 Standard PHP Library(标准PHP库)的缩写。它是 PHP5 引入的一个扩展标准库，包括 spl autoload 相关的函数以及各种数据结构和迭代器的接口或类。spl autoload 相关的函数具体可见 php中"),e("a",h,[a("spl_autoload"),t(o)]),a("。 "),i,a("，我们可以向这个函数注册多个我们自己的 autoload() 函数，当 PHP 找不到类名时，PHP就会调用这个堆栈，然后去调用自定义的 autoload() 函数，实现自动加载功能。如果我们不向这个函数输入任何参数，那么就会默认注册 spl_autoload() 函数。")]),e("p",null,[e("a",u,[a("https://segmentfault.com/a/1190000014948542"),t(o)])])])}const x=r(s,[["render",p],["__file","深入解析 composer 的自动加载原理.html.vue"]]);export{x as default};
