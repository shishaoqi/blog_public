const e=JSON.parse('{"key":"v-0073fb56","path":"/interview/Redis/redis%20%E7%9A%84%E8%BF%87%E6%9C%9F%E7%AD%96%E7%95%A5%E4%BB%A5%E5%8F%8A%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E6%9C%BA%E5%88%B6.html","title":"Redis 的过期键删除策略","lang":"zh-CN","frontmatter":{"description":"Redis 的过期键删除策略 过期键删除策略 如果一个键过期了，那么他什么时候会被删除 定时删除：在设置键的过期时间的同时，创建一个定时器，让定时器在键的过期时间来 临时，立即执行对键的删除操作。 惰性删除：放任键过期不管，但是每次从键空间获取键时，都检测获取得的键是否过期，如果过期的话，就删除该键，如果没有过期，就返回该键。 定期删除：每隔一段时间，程序就对数据库进行一次检查，删除里面的过期键。 至于要删除多少过期键，以及要检查多少数据库，由程序算法决定。 这三种策略中，第一种和第三种为主动删除策略，而第二种则为被动删除策略。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/Redis/redis%20%E7%9A%84%E8%BF%87%E6%9C%9F%E7%AD%96%E7%95%A5%E4%BB%A5%E5%8F%8A%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"Redis 的过期键删除策略"}],["meta",{"property":"og:description","content":"Redis 的过期键删除策略 过期键删除策略 如果一个键过期了，那么他什么时候会被删除 定时删除：在设置键的过期时间的同时，创建一个定时器，让定时器在键的过期时间来 临时，立即执行对键的删除操作。 惰性删除：放任键过期不管，但是每次从键空间获取键时，都检测获取得的键是否过期，如果过期的话，就删除该键，如果没有过期，就返回该键。 定期删除：每隔一段时间，程序就对数据库进行一次检查，删除里面的过期键。 至于要删除多少过期键，以及要检查多少数据库，由程序算法决定。 这三种策略中，第一种和第三种为主动删除策略，而第二种则为被动删除策略。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 的过期键删除策略\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"过期键删除策略","slug":"过期键删除策略","link":"#过期键删除策略","children":[]},{"level":3,"title":"Redis 的过期键删除策略","slug":"redis-的过期键删除策略-1","link":"#redis-的过期键删除策略-1","children":[]},{"level":3,"title":"数据淘汰策略","slug":"数据淘汰策略","link":"#数据淘汰策略","children":[]},{"level":3,"title":"概念介绍","slug":"概念介绍","link":"#概念介绍","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.02,"words":1206},"filePathRelative":"interview/Redis/redis 的过期策略以及内存淘汰机制.md","excerpt":"<h1> Redis 的过期键删除策略</h1>\\n<h3> 过期键删除策略</h3>\\n<ul>\\n<li>\\n<p>如果一个键过期了，那么他什么时候会被删除</p>\\n<ul>\\n<li>定时删除：在设置键的过期时间的同时，创建一个定时器，让定时器在键的过期时间来 临时，立即执行对键的删除操作。</li>\\n<li>惰性删除：放任键过期不管，但是每次从键空间获取键时，都检测获取得的键是否过期，如果过期的话，就删除该键，如果没有过期，就返回该键。</li>\\n<li>定期删除：每隔一段时间，程序就对数据库进行一次检查，删除里面的过期键。</li>\\n</ul>\\n</li>\\n<li>\\n<p>至于要删除多少过期键，以及要检查多少数据库，由程序算法决定。 这三种策略中，第一种和第三种为<code>主动删除策略</code>，而第二种则为<code>被动删除策略</code>。</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
