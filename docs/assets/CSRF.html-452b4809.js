const e=JSON.parse('{"key":"v-7ac30b0a","path":"/interview/%E5%AE%89%E5%85%A8/CSRF.html","title":"CSRF","lang":"zh-CN","frontmatter":{"description":"CSRF 跨站请求伪造(Cross-site request forgery,简称 CSRF)， 是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法 什么是CSRF CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。 一个典型的CSRF攻击有着如下的流程： 受害者登录a.com，并保留了登录凭证（Cookie）。 攻击者引诱受害者访问了b.com。 b.com 向 a.com 发送了一个请求：a.com/act=xx。浏览器会默认携带a.com的Cookie。 a.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。 a.com以受害者的名义执行了act=xx。 攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让a.com执行了自己定义的操作。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/%E5%AE%89%E5%85%A8/CSRF.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"CSRF"}],["meta",{"property":"og:description","content":"CSRF 跨站请求伪造(Cross-site request forgery,简称 CSRF)， 是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法 什么是CSRF CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。 一个典型的CSRF攻击有着如下的流程： 受害者登录a.com，并保留了登录凭证（Cookie）。 攻击者引诱受害者访问了b.com。 b.com 向 a.com 发送了一个请求：a.com/act=xx。浏览器会默认携带a.com的Cookie。 a.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。 a.com以受害者的名义执行了act=xx。 攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让a.com执行了自己定义的操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSRF\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"什么是CSRF","slug":"什么是csrf","link":"#什么是csrf","children":[]},{"level":2,"title":"防护策略","slug":"防护策略","link":"#防护策略","children":[{"level":3,"title":"同源检测","slug":"同源检测","link":"#同源检测","children":[]},{"level":3,"title":"CSRF Token","slug":"csrf-token","link":"#csrf-token","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.89,"words":1466},"filePathRelative":"interview/安全/CSRF.md","excerpt":"<h1> CSRF</h1>\\n<p>跨站请求伪造(Cross-site request forgery,简称 CSRF)， 是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法</p>\\n<h3> 什么是CSRF</h3>\\n<p>CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。</p>\\n<p>一个典型的CSRF攻击有着如下的流程：</p>\\n<ul>\\n<li><a href=\\"http://xn--a-f38al5vkzdt61bv7l.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">受害者登录a.com</a>，并保留了登录凭证（Cookie）。</li>\\n<li><a href=\\"http://xn--b-nv6ao4io8bp6po6e00mu47cda4311avpa330h.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">攻击者引诱受害者访问了b.com</a>。</li>\\n<li><a href=\\"http://b.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">b.com</a> 向 <a href=\\"http://a.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">a.com</a> 发送了一个请求：<a href=\\"http://a.com/act=xx%E3%80%82%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BC%9A%E9%BB%98%E8%AE%A4%E6%90%BA%E5%B8%A6a.com%E7%9A%84Cookie%E3%80%82\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">a.com/act=xx。浏览器会默认携带a.com的Cookie。</a></li>\\n<li>a.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。</li>\\n<li>a.com以受害者的名义执行了act=xx。</li>\\n<li>攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让a.com执行了自己定义的操作。</li>\\n</ul>","autoDesc":true}');export{e as data};
