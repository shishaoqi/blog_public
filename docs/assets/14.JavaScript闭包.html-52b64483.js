const n=JSON.parse('{"key":"v-6490b576","path":"/interview/%E5%89%8D%E7%AB%AF/14.JavaScript%E9%97%AD%E5%8C%85.html","title":"JavaScript 闭包","lang":"zh-CN","frontmatter":{"description":"JavaScript 闭包 闭包是函数和声明该函数的词法环境的组合。 词法作用域 考虑如下情况： function init() { var name = \\"Mozilla\\"; // name 是一个被 init 创建的局部变量 function displayName() { // displayName() 是内部函数,一个闭包 alert(name); // 使用了父函数中声明的变量 } displayName(); } init();","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/%E5%89%8D%E7%AB%AF/14.JavaScript%E9%97%AD%E5%8C%85.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"JavaScript 闭包"}],["meta",{"property":"og:description","content":"JavaScript 闭包 闭包是函数和声明该函数的词法环境的组合。 词法作用域 考虑如下情况： function init() { var name = \\"Mozilla\\"; // name 是一个被 init 创建的局部变量 function displayName() { // displayName() 是内部函数,一个闭包 alert(name); // 使用了父函数中声明的变量 } displayName(); } init();"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript 闭包\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"词法作用域","slug":"词法作用域","link":"#词法作用域","children":[]},{"level":2,"title":"闭包","slug":"闭包","link":"#闭包","children":[]},{"level":2,"title":"实用的闭包","slug":"实用的闭包","link":"#实用的闭包","children":[]},{"level":2,"title":"用闭包模拟私有方法","slug":"用闭包模拟私有方法","link":"#用闭包模拟私有方法","children":[]},{"level":2,"title":"在循环中创建闭包：一个常见错误","slug":"在循环中创建闭包-一个常见错误","link":"#在循环中创建闭包-一个常见错误","children":[]},{"level":2,"title":"性能考量","slug":"性能考量","link":"#性能考量","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":9.58,"words":2873},"filePathRelative":"interview/前端/14.JavaScript闭包.md","excerpt":"<h1> JavaScript 闭包</h1>\\n<p>闭包是函数和声明该函数的词法环境的组合。</p>\\n<h2> 词法作用域</h2>\\n<p>考虑如下情况：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">var</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Mozilla\\"</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// name 是一个被 init 创建的局部变量</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">displayName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">// displayName() 是内部函数,一个闭包</span>\\n        <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 使用了父函数中声明的变量</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token function\\">displayName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
