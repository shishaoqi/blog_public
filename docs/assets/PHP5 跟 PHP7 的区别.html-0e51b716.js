import{_ as l,W as t,X as n,Y as e,Z as o,$ as i,a2 as r,C as p}from"./framework-7d1f27fd.js";const P={},c=r('<h1 id="php5-6-与-php-7-0-区别" tabindex="-1"><a class="header-anchor" href="#php5-6-与-php-7-0-区别" aria-hidden="true">#</a> PHP5.6 与 PHP 7.0 区别</h1><h2 id="两者的区别" tabindex="-1"><a class="header-anchor" href="#两者的区别" aria-hidden="true">#</a> 两者的区别</h2><ul><li><p>PHP7.0 比PHP5.6性能提升了两倍。</p></li><li><p>PHP7.0 全面一致支持64位。</p></li><li><p>PHP7.0 之前出现的致命错误，都改成了抛出异常。</p></li><li><p>增加了 <code>null合并运算符</code>（ ?? ）。效果相当于三元运算符。</p></li><li><p>PHP7.0 新增了函数的返回类型声明。</p></li><li><p>PHP7.0 新增了标量类型声明。 　　PHP7 中的函数的形参类型声明可以是标量。在 PHP 5 中只可以是类名、接口、array 或者 callable (PHP 5.4，即可以是函数，包括匿名函数)，现在也可以使用 string、int、float和 bool 了。</p></li><li><p>新增加了<code>匿名类</code>。 　　PHP 5.3 开始有了匿名函数，现在又新增了匿名类；</p></li><li><p>PHP7.0之后溢移除了一些老的不再支持的SAPI(服务器端应用编程端口)和扩展。</p></li><li><p>define 可以定义常量数组。</p></li></ul>',3),s={href:"https://segmentfault.com/a/1190000020625945",target:"_blank",rel:"noopener noreferrer"};function _(d,h){const a=p("ExternalLinkIcon");return t(),n("div",null,[c,e("p",null,[e("a",s,[o("https://segmentfault.com/a/1190000020625945"),i(a)])])])}const f=l(P,[["render",_],["__file","PHP5 跟 PHP7 的区别.html.vue"]]);export{f as default};
