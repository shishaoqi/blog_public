const e=JSON.parse('{"key":"v-574d918d","path":"/interview/PHP/cgi%E5%AF%B9%E6%AF%94fastcgi%E4%BB%A5%E5%8F%8Aphp-cgi%E5%92%8Cphp-fpm%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E5%8C%BA%E5%88%AB.html","title":"FPM","lang":"zh-CN","frontmatter":{"description":"FPM 概述 在整个网站架构中，Web Server（如Apache、Nginx）只是内容的分发者。举个栗子，如果客户端请求的是 index.html，那么Web Server会去文件系统中找到这个文件，发送给浏览器，这里分发的是静态数据。 如果请求的是 index.php，根据配置文件，Web Server知道这个不是静态文件，需要去找 PHP 解析器来处理，那么他会把这个请求简单处理，然后交给PHP解析器。 当Web Server收到index.php 这个请求后，会启动对应的 CGI 程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程，Web server再把结果返回给浏览器。这就是一个完整的动态PHP Web访问流程（接下来再引出下的概念，会好理解很多）。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/PHP/cgi%E5%AF%B9%E6%AF%94fastcgi%E4%BB%A5%E5%8F%8Aphp-cgi%E5%92%8Cphp-fpm%E4%B9%8B%E9%97%B4%E7%9A%84%E8%81%94%E7%B3%BB%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"FPM"}],["meta",{"property":"og:description","content":"FPM 概述 在整个网站架构中，Web Server（如Apache、Nginx）只是内容的分发者。举个栗子，如果客户端请求的是 index.html，那么Web Server会去文件系统中找到这个文件，发送给浏览器，这里分发的是静态数据。 如果请求的是 index.php，根据配置文件，Web Server知道这个不是静态文件，需要去找 PHP 解析器来处理，那么他会把这个请求简单处理，然后交给PHP解析器。 当Web Server收到index.php 这个请求后，会启动对应的 CGI 程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程，Web server再把结果返回给浏览器。这就是一个完整的动态PHP Web访问流程（接下来再引出下的概念，会好理解很多）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/article/docs/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"FPM"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FPM\\",\\"image\\":[\\"https://mister-hope.github.io/article/docs/\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"FPM","slug":"fpm-1","link":"#fpm-1","children":[]},{"level":2,"title":"CGI","slug":"cgi","link":"#cgi","children":[]},{"level":2,"title":"FastCGI","slug":"fastcgi","link":"#fastcgi","children":[]},{"level":2,"title":"PHP-CGI","slug":"php-cgi","link":"#php-cgi","children":[]},{"level":2,"title":"PHP-FPM","slug":"php-fpm","link":"#php-fpm","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.45,"words":1636},"filePathRelative":"interview/PHP/cgi对比fastcgi以及php-cgi和php-fpm之间的联系区别.md","excerpt":"<h1> FPM</h1>\\n<h2> 概述</h2>\\n<p>在整个网站架构中，Web Server（如Apache、Nginx）只是内容的分发者。举个栗子，如果客户端请求的是 index.html，那么Web Server会去文件系统中找到这个文件，发送给浏览器，这里分发的是静态数据。\\n</p>\\n<p>如果请求的是 index.php，根据配置文件，Web Server知道这个不是静态文件，需要去找 PHP 解析器来处理，那么他会把这个请求简单处理，然后交给PHP解析器。 当Web Server收到index.php 这个请求后，会启动对应的 CGI 程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程，Web server再把结果返回给浏览器。这就是一个完整的动态PHP Web访问流程（接下来再引出下的概念，会好理解很多）。\\n</p>","autoDesc":true}');export{e as data};
