const t=JSON.parse('{"key":"v-74d9f0a8","path":"/interview/%E7%BD%91%E7%BB%9C/TCP%20TIME_WAIT.html","title":"TCP TIME_WAIT","lang":"zh-CN","frontmatter":{"description":"TCP TIME_WAIT TCP 协议需要 TIME_WAIT 状态的原因和客户端需要等待两个 MSL 不能直接进入 CLOSED 状态的原因是一样的： 防止延迟的数据段被其他使用相同源地址、源端口、目的地址以及目的端口的 TCP 连接收到； 保证 TCP 连接的正常关闭，即等待被动关闭连接的一方收到 最终的(FIN 对应的) ACK 消息； 上述两个原因都相对比较简单，我们来展开介绍这两个原因背后可能存在的一些问题。 阻止延迟数据段","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/docs/interview/%E7%BD%91%E7%BB%9C/TCP%20TIME_WAIT.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"TCP TIME_WAIT"}],["meta",{"property":"og:description","content":"TCP TIME_WAIT TCP 协议需要 TIME_WAIT 状态的原因和客户端需要等待两个 MSL 不能直接进入 CLOSED 状态的原因是一样的： 防止延迟的数据段被其他使用相同源地址、源端口、目的地址以及目的端口的 TCP 连接收到； 保证 TCP 连接的正常关闭，即等待被动关闭连接的一方收到 最终的(FIN 对应的) ACK 消息； 上述两个原因都相对比较简单，我们来展开介绍这两个原因背后可能存在的一些问题。 阻止延迟数据段"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/article/docs/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"TCP TIME_WAIT"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TCP TIME_WAIT\\",\\"image\\":[\\"https://mister-hope.github.io/article/docs/\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":3,"title":"阻止延迟数据段","slug":"阻止延迟数据段","link":"#阻止延迟数据段","children":[]},{"level":3,"title":"保证连接关闭","slug":"保证连接关闭","link":"#保证连接关闭","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.74,"words":522},"filePathRelative":"interview/网络/TCP TIME_WAIT.md","excerpt":"<h1> TCP TIME_WAIT</h1>\\n<p>TCP 协议需要 TIME_WAIT 状态的原因和客户端需要等待两个 MSL 不能直接进入 CLOSED 状态的原因是一样的：</p>\\n<ol>\\n<li>\\n<p>防止延迟的数据段被其他使用相同源地址、源端口、目的地址以及目的端口的 TCP 连接收到；</p>\\n</li>\\n<li>\\n<p>保证 TCP 连接的正常关闭，即等待被动关闭连接的一方收到 最终的(FIN 对应的) ACK 消息；</p>\\n</li>\\n</ol>\\n<p>上述两个原因都相对比较简单，我们来展开介绍这两个原因背后可能存在的一些问题。</p>\\n<h3> 阻止延迟数据段</h3>","autoDesc":true}');export{t as data};
